//Created by anandm at ${DATE}

"use strict";
var path = require("path");
var Joi = require("joi");
var Boom = require("boom");

var ${MODEL} = require(path.join(__dirname, "../models/${MODEL}"));

var routes = [{
    method : "GET",
    path : "/${RESOURCE}",
    config : {
        handler : function(request, reply) {
            ${MODEL}.find({}, function(err, docs) {

                if(err) {
                    return Boom.badImplementation(err.message);
                }

                return reply(docs);

            });
        },
        description: "Get all ${MODEL}",
        notes: "notes",
        tags: ["${MODEL}"]
    }
}, {
    method : "GET",
    path : "/${RESOURCE}/{id}",
    config : {
        handler : function(request, reply) {
            var id = request.params.id;

            ${MODEL}.findById(id, function(err, doc) {

                if(err) {
                    return Boom.badImplementation(err.message);
                }

                return reply(doc);
            })
        },
        description: "Get ${MODEL}",
        notes: "notes",
        tags: ["${MODEL}"]
    }
}, {
    method : "POST",
    path : "/${RESOURCE}",
    config : {
        handler : function(request, reply) {
            var payload = request.payload;

            var resource = new ${MODEL}(payload);

            resource.save(function(err, doc) {

                if(err) {
                    return reply(Boom.badImplementation(err.message));
                }

                return reply(doc);
            });

        },
        description: "Create a new ${MODEL}",
        notes: "notes",
        tags: ["${MODEL}"]
    }
}, {
    method : "PUT",
    path : "/${RESOURCE}/{id}",
    config : {
        handler : function(request, reply) {
            var id = request.params.id;
            var payload = request.payload;

            ${MODEL}.findByIdAndUpdate(id, {$set : payload}, function(err, result) {

                if(err) {
                    return reply(Boom.badImplementation(err.message));
                }

                return reply(result);
            });
        },
        description: "Update ${MODEL}",
        notes: "notes",
        tags: ["${MODEL}"]
    }
}, {
    method : "DELETE",
    path : "/${RESOURCE}/{id}",
    config : {
        handler : function(request, reply) {
            var id = request.params.id;

            ${MODEL}.findByIdAndRemove(id, function(err, result) {

                if(err) {
                    return reply(Boom.badImplementation(err.message));
                }

                return reply(result);
            });
        },
        description: "Delete ${MODEL}",
        notes: "notes",
        tags: ["${MODEL}"]
    }
}];

module.exports = routes;